workflows:
  android-release:
    name: Android Release
    max_build_duration: 60
    instance_type: mac_mini_m1

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
          source: true

    environment:
      groups:
        - keystore_credentials
        - github_credentials
      vars:
        NODE_VERSION: 20
        JAVA_VERSION: 17
      node: $NODE_VERSION
      java: $JAVA_VERSION
      flutter: stable

    scripts:
      - name: Install Node dependencies
        script: npm ci

      - name: Install Capacitor CLI
        script: npm ci -g @capacitor/core @capacitor/cli @capacitor/android
      - name: Build web
        script: npm run build

      - name: Capacitor sync
        script: npx cap sync android

      - name: Decode Keystore
        script: |
          echo $CM_KEYSTORE | base64 --decode > android/app/release.keystore

      - name: Build Signed APK
        working_directory: android
        script: |
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=$CM_KEYSTORE_PATH \
            -Pandroid.injected.signing.store.password=$CM_KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$CM_KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$CM_KEY_PASSWORD

      - name: Upload to GitHub Release
        script: |
          APK_PATH="android/app/build/outputs/apk/release/app-release.apk"
          RELEASE_TAG="v$BUILD_NUMBER"
          RELEASE_NAME="Release $BUILD_NUMBER"

          curl -H "Authorization: token $GITHUB_TOKEN" \
               -H "Content-Type: application/json" \
               -d "{\"tag_name\":\"$RELEASE_TAG\",\"name\":\"$RELEASE_NAME\",\"body\":\"Automatic release from Codemagic build $BUILD_NUMBER\"}" \
               https://api.github.com/repos/$GITHUB_REPOSITORY/releases \
               > release.json

          RELEASE_ID=$(jq -r '.id' release.json)

          curl -H "Authorization: token $GITHUB_TOKEN" \
               -H "Content-Type: application/zip" \
               --data-binary @"$APK_PATH" \
               "https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$RELEASE_ID/assets?name=$(basename $APK_PATH)"

    artifacts:
      - android/app/build/outputs/**/**/*.apk
